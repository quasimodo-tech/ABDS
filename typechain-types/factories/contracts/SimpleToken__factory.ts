/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  SimpleToken,
  SimpleTokenInterface,
} from "../../contracts/SimpleToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405269d3c21bcecceda100000060055534801561001e57600080fd5b506040518060400160405280600e81526020017f53696d706c65545354546f6b656e0000000000000000000000000000000000008152506040518060400160405280600381526020017f53544b0000000000000000000000000000000000000000000000000000000000815250816003908161009a91906104d1565b5080600490816100aa91906104d1565b5050506100c76738cf3aa4becfa4ef60c01b61011260201b60201c565b6100e1670832cdfa930f1f0560c01b61011260201b60201c565b6100fb67c1abe92d810040de60c01b61011260201b60201c565b61010d3360055461011560201b60201c565b6106ad565b50565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610184576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017b90610600565b60405180910390fd5b6101966000838361027760201b60201c565b80600260008282546101a8919061064f565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516102599190610692565b60405180910390a36102736000838361027c60201b60201c565b5050565b505050565b505050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061030257607f821691505b602082108103610315576103146102bb565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261037d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610340565b6103878683610340565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006103ce6103c96103c48461039f565b6103a9565b61039f565b9050919050565b6000819050919050565b6103e8836103b3565b6103fc6103f4826103d5565b84845461034d565b825550505050565b600090565b610411610404565b61041c8184846103df565b505050565b5b8181101561044057610435600082610409565b600181019050610422565b5050565b601f821115610485576104568161031b565b61045f84610330565b8101602085101561046e578190505b61048261047a85610330565b830182610421565b50505b505050565b600082821c905092915050565b60006104a86000198460080261048a565b1980831691505092915050565b60006104c18383610497565b9150826002028217905092915050565b6104da82610281565b67ffffffffffffffff8111156104f3576104f261028c565b5b6104fd82546102ea565b610508828285610444565b600060209050601f83116001811461053b5760008415610529578287015190505b61053385826104b5565b86555061059b565b601f1984166105498661031b565b60005b828110156105715784890151825560018201915060208501945060208101905061054c565b8683101561058e578489015161058a601f891682610497565b8355505b6001600288020188555050505b505050505050565b600082825260208201905092915050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b60006105ea601f836105a3565b91506105f5826105b4565b602082019050919050565b60006020820190508181036000830152610619816105dd565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061065a8261039f565b91506106658361039f565b925082820190508082111561067d5761067c610620565b5b92915050565b61068c8161039f565b82525050565b60006020820190506106a76000830184610683565b92915050565b6114a4806106bc6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063395093511161008c57806395d89b411161006657806395d89b4114610228578063a457c2d714610246578063a9059cbb14610276578063dd62ed3e146102a6576100cf565b806339509351146101ac57806340c10f19146101dc57806370a08231146101f8576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461012257806323b872dd14610140578063313ce56714610170578063378dc3dc1461018e575b600080fd5b6100dc6102d6565b6040516100e99190610d15565b60405180910390f35b61010c60048036038101906101079190610dd0565b610368565b6040516101199190610e2b565b60405180910390f35b61012a61038b565b6040516101379190610e55565b60405180910390f35b61015a60048036038101906101559190610e70565b610395565b6040516101679190610e2b565b60405180910390f35b6101786103c4565b6040516101859190610edf565b60405180910390f35b6101966103cd565b6040516101a39190610e55565b60405180910390f35b6101c660048036038101906101c19190610dd0565b6103d3565b6040516101d39190610e2b565b60405180910390f35b6101f660048036038101906101f19190610dd0565b61040a565b005b610212600480360381019061020d9190610efa565b610454565b60405161021f9190610e55565b60405180910390f35b61023061049c565b60405161023d9190610d15565b60405180910390f35b610260600480360381019061025b9190610dd0565b61052e565b60405161026d9190610e2b565b60405180910390f35b610290600480360381019061028b9190610dd0565b6105a5565b60405161029d9190610e2b565b60405180910390f35b6102c060048036038101906102bb9190610f27565b6105c8565b6040516102cd9190610e55565b60405180910390f35b6060600380546102e590610f96565b80601f016020809104026020016040519081016040528092919081815260200182805461031190610f96565b801561035e5780601f106103335761010080835404028352916020019161035e565b820191906000526020600020905b81548152906001019060200180831161034157829003601f168201915b5050505050905090565b60008061037361064f565b9050610380818585610657565b600191505092915050565b6000600254905090565b6000806103a061064f565b90506103ad858285610820565b6103b88585856108ac565b60019150509392505050565b60006012905090565b60055481565b6000806103de61064f565b90506103ff8185856103f085896105c8565b6103fa9190610ff6565b610657565b600191505092915050565b61041e674f8adbf6bdf4a8f260c01b610b22565b6104326779d21b4a424789c660c01b610b22565b61044667a093f085af784bab60c01b610b22565b6104508282610b25565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546104ab90610f96565b80601f01602080910402602001604051908101604052809291908181526020018280546104d790610f96565b80156105245780601f106104f957610100808354040283529160200191610524565b820191906000526020600020905b81548152906001019060200180831161050757829003601f168201915b5050505050905090565b60008061053961064f565b9050600061054782866105c8565b90508381101561058c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105839061109c565b60405180910390fd5b6105998286868403610657565b60019250505092915050565b6000806105b061064f565b90506105bd8185856108ac565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036106c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106bd9061112e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610735576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072c906111c0565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516108139190610e55565b60405180910390a3505050565b600061082c84846105c8565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146108a65781811015610898576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088f9061122c565b60405180910390fd5b6108a58484848403610657565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361091b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610912906112be565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361098a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098190611350565b60405180910390fd5b610995838383610c7b565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a1b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a12906113e2565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b099190610e55565b60405180910390a3610b1c848484610c80565b50505050565b50565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8b9061144e565b60405180910390fd5b610ba060008383610c7b565b8060026000828254610bb29190610ff6565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610c639190610e55565b60405180910390a3610c7760008383610c80565b5050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610cbf578082015181840152602081019050610ca4565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ce782610c85565b610cf18185610c90565b9350610d01818560208601610ca1565b610d0a81610ccb565b840191505092915050565b60006020820190508181036000830152610d2f8184610cdc565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d6782610d3c565b9050919050565b610d7781610d5c565b8114610d8257600080fd5b50565b600081359050610d9481610d6e565b92915050565b6000819050919050565b610dad81610d9a565b8114610db857600080fd5b50565b600081359050610dca81610da4565b92915050565b60008060408385031215610de757610de6610d37565b5b6000610df585828601610d85565b9250506020610e0685828601610dbb565b9150509250929050565b60008115159050919050565b610e2581610e10565b82525050565b6000602082019050610e406000830184610e1c565b92915050565b610e4f81610d9a565b82525050565b6000602082019050610e6a6000830184610e46565b92915050565b600080600060608486031215610e8957610e88610d37565b5b6000610e9786828701610d85565b9350506020610ea886828701610d85565b9250506040610eb986828701610dbb565b9150509250925092565b600060ff82169050919050565b610ed981610ec3565b82525050565b6000602082019050610ef46000830184610ed0565b92915050565b600060208284031215610f1057610f0f610d37565b5b6000610f1e84828501610d85565b91505092915050565b60008060408385031215610f3e57610f3d610d37565b5b6000610f4c85828601610d85565b9250506020610f5d85828601610d85565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610fae57607f821691505b602082108103610fc157610fc0610f67565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061100182610d9a565b915061100c83610d9a565b925082820190508082111561102457611023610fc7565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000611086602583610c90565b91506110918261102a565b604082019050919050565b600060208201905081810360008301526110b581611079565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611118602483610c90565b9150611123826110bc565b604082019050919050565b600060208201905081810360008301526111478161110b565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006111aa602283610c90565b91506111b58261114e565b604082019050919050565b600060208201905081810360008301526111d98161119d565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611216601d83610c90565b9150611221826111e0565b602082019050919050565b6000602082019050818103600083015261124581611209565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006112a8602583610c90565b91506112b38261124c565b604082019050919050565b600060208201905081810360008301526112d78161129b565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b600061133a602383610c90565b9150611345826112de565b604082019050919050565b600060208201905081810360008301526113698161132d565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006113cc602683610c90565b91506113d782611370565b604082019050919050565b600060208201905081810360008301526113fb816113bf565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611438601f83610c90565b915061144382611402565b602082019050919050565b600060208201905081810360008301526114678161142b565b905091905056fea2646970667358221220f27113e023ccbf8412399b749769c5a52bc71dcd1a0ff6aac3e20404fd8ffb8664736f6c634300081b0033";

type SimpleTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleToken__factory extends ContractFactory {
  constructor(...args: SimpleTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SimpleToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SimpleToken__factory {
    return super.connect(runner) as SimpleToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleTokenInterface {
    return new Interface(_abi) as SimpleTokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): SimpleToken {
    return new Contract(address, _abi, runner) as unknown as SimpleToken;
  }
}
