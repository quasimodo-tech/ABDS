/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MockPriceOracle,
  MockPriceOracleInterface,
} from "../../../contracts/MockPriceOracle.sol/MockPriceOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_initialABDSUSDTPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_initialABDSUSDCPrice",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "getABDSPriceInUSDC",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getABDSPriceInUSDT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setABDSPriceInUSDC",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setABDSPriceInUSDT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161092d38038061092d833981810160405281019061003291906101bb565b61004e6100436100b160201b60201c565b6100b960201b60201c565b61006867593b12faafd9478f60c01b61017d60201b60201c565b61008267dcfcdf7da6b26d1b60c01b61017d60201b60201c565b816001819055506100a3673a856c289fc3a34c60c01b61017d60201b60201c565b8060028190555050506101fb565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b50565b600080fd5b6000819050919050565b61019881610185565b81146101a357600080fd5b50565b6000815190506101b58161018f565b92915050565b600080604083850312156101d2576101d1610180565b5b60006101e0858286016101a6565b92505060206101f1858286016101a6565b9150509250929050565b6107238061020a6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638379d77f1161005b5780638379d77f146100c45780638da5cb5b146100e2578063f2fde38b14610100578063f8f382cd1461011c5761007d565b806334274101146100825780636a5135ef1461009e578063715018a6146100ba575b600080fd5b61009c600480360381019061009791906104d2565b61013a565b005b6100b860048036038101906100b391906104d2565b61019c565b005b6100c26101fe565b005b6100cc610212565b6040516100d9919061050e565b60405180910390f35b6100ea610258565b6040516100f7919061056a565b60405180910390f35b61011a600480360381019061011591906105b1565b610281565b005b610124610304565b604051610131919061050e565b60405180910390f35b61014e67a4fe65f8a662fdb360c01b61034a565b61015661034d565b61016a672a854bd042ae24a760c01b61034a565b61017e67b762f4f4bc9fdf2d60c01b61034a565b610192678b22fe905845f62d60c01b61034a565b8060028190555050565b6101b06745c12425d089682860c01b61034a565b6101b861034d565b6101cc6778292a76c9fbd3a460c01b61034a565b6101e067ea115682350243fe60c01b61034a565b6101f467ec936b8cf4f7fc4f60c01b61034a565b8060018190555050565b61020661034d565b61021060006103cb565b565b60006102286746debf81196a6a1e60c01b61034a565b61023c675ef17bfcdaaed4e360c01b61034a565b610250670c34fc8e08870ac360c01b61034a565b600154905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61028961034d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036102f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ef90610661565b60405180910390fd5b610301816103cb565b50565b600061031a676b449f50100b29cc60c01b61034a565b61032e678d6c64a72bdbfaa460c01b61034a565b61034267cf6f0f7d8e80e58a60c01b61034a565b600254905090565b50565b61035561048f565b73ffffffffffffffffffffffffffffffffffffffff16610373610258565b73ffffffffffffffffffffffffffffffffffffffff16146103c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c0906106cd565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b6000819050919050565b6104af8161049c565b81146104ba57600080fd5b50565b6000813590506104cc816104a6565b92915050565b6000602082840312156104e8576104e7610497565b5b60006104f6848285016104bd565b91505092915050565b6105088161049c565b82525050565b600060208201905061052360008301846104ff565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061055482610529565b9050919050565b61056481610549565b82525050565b600060208201905061057f600083018461055b565b92915050565b61058e81610549565b811461059957600080fd5b50565b6000813590506105ab81610585565b92915050565b6000602082840312156105c7576105c6610497565b5b60006105d58482850161059c565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061064b6026836105de565b9150610656826105ef565b604082019050919050565b6000602082019050818103600083015261067a8161063e565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006106b76020836105de565b91506106c282610681565b602082019050919050565b600060208201905081810360008301526106e6816106aa565b905091905056fea2646970667358221220d168059477506ecf63da08b467ecd2435722c172aaa31daf8450ead88245545264736f6c634300081b0033";

type MockPriceOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockPriceOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockPriceOracle__factory extends ContractFactory {
  constructor(...args: MockPriceOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _initialABDSUSDTPrice: BigNumberish,
    _initialABDSUSDCPrice: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _initialABDSUSDTPrice,
      _initialABDSUSDCPrice,
      overrides || {}
    );
  }
  override deploy(
    _initialABDSUSDTPrice: BigNumberish,
    _initialABDSUSDCPrice: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _initialABDSUSDTPrice,
      _initialABDSUSDCPrice,
      overrides || {}
    ) as Promise<
      MockPriceOracle & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockPriceOracle__factory {
    return super.connect(runner) as MockPriceOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockPriceOracleInterface {
    return new Interface(_abi) as MockPriceOracleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockPriceOracle {
    return new Contract(address, _abi, runner) as unknown as MockPriceOracle;
  }
}
