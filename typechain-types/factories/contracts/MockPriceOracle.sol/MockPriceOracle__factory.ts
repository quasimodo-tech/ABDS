/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MockPriceOracle,
  MockPriceOracleInterface,
} from "../../../contracts/MockPriceOracle.sol/MockPriceOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_initialABDSUSDTPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_initialABDSUSDCPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_initialABDSETHPrice",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "getABDSPriceInETH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getABDSPriceInUSDC",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getABDSPriceInUSDT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setABDSPriceInETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setABDSPriceInUSDC",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setABDSPriceInUSDT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161084838038061084883398181016040528101906100329190610172565b61004e61004361006b60201b60201c565b61007360201b60201c565b8260018190555081600281905550806003819055505050506101c5565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b6000819050919050565b61014f8161013c565b811461015a57600080fd5b50565b60008151905061016c81610146565b92915050565b60008060006060848603121561018b5761018a610137565b5b60006101998682870161015d565b93505060206101aa8682870161015d565b92505060406101bb8682870161015d565b9150509250925092565b610674806101d46000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638379d77f116100665780638379d77f146100f65780638da5cb5b14610114578063c589f75114610132578063f2fde38b14610150578063f8f382cd1461016c57610093565b8063120b0ded1461009857806334274101146100b45780636a5135ef146100d0578063715018a6146100ec575b600080fd5b6100b260048036038101906100ad9190610423565b61018a565b005b6100ce60048036038101906100c99190610423565b61019c565b005b6100ea60048036038101906100e59190610423565b6101ae565b005b6100f46101c0565b005b6100fe6101d4565b60405161010b919061045f565b60405180910390f35b61011c6101de565b60405161012991906104bb565b60405180910390f35b61013a610207565b604051610147919061045f565b60405180910390f35b61016a60048036038101906101659190610502565b610211565b005b610174610294565b604051610181919061045f565b60405180910390f35b61019261029e565b8060018190555050565b6101a461029e565b8060028190555050565b6101b661029e565b8060018190555050565b6101c861029e565b6101d2600061031c565b565b6000600154905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600354905090565b61021961029e565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610288576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027f906105b2565b60405180910390fd5b6102918161031c565b50565b6000600254905090565b6102a66103e0565b73ffffffffffffffffffffffffffffffffffffffff166102c46101de565b73ffffffffffffffffffffffffffffffffffffffff161461031a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103119061061e565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b6000819050919050565b610400816103ed565b811461040b57600080fd5b50565b60008135905061041d816103f7565b92915050565b600060208284031215610439576104386103e8565b5b60006104478482850161040e565b91505092915050565b610459816103ed565b82525050565b60006020820190506104746000830184610450565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104a58261047a565b9050919050565b6104b58161049a565b82525050565b60006020820190506104d060008301846104ac565b92915050565b6104df8161049a565b81146104ea57600080fd5b50565b6000813590506104fc816104d6565b92915050565b600060208284031215610518576105176103e8565b5b6000610526848285016104ed565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061059c60268361052f565b91506105a782610540565b604082019050919050565b600060208201905081810360008301526105cb8161058f565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061060860208361052f565b9150610613826105d2565b602082019050919050565b60006020820190508181036000830152610637816105fb565b905091905056fea26469706673582212200396499974346bf2fec42ffe56817e62db38834690bd4d26b0ea72e00fb951b964736f6c634300081b0033";

type MockPriceOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockPriceOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockPriceOracle__factory extends ContractFactory {
  constructor(...args: MockPriceOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _initialABDSUSDTPrice: BigNumberish,
    _initialABDSUSDCPrice: BigNumberish,
    _initialABDSETHPrice: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _initialABDSUSDTPrice,
      _initialABDSUSDCPrice,
      _initialABDSETHPrice,
      overrides || {}
    );
  }
  override deploy(
    _initialABDSUSDTPrice: BigNumberish,
    _initialABDSUSDCPrice: BigNumberish,
    _initialABDSETHPrice: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _initialABDSUSDTPrice,
      _initialABDSUSDCPrice,
      _initialABDSETHPrice,
      overrides || {}
    ) as Promise<
      MockPriceOracle & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockPriceOracle__factory {
    return super.connect(runner) as MockPriceOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockPriceOracleInterface {
    return new Interface(_abi) as MockPriceOracleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockPriceOracle {
    return new Contract(address, _abi, runner) as unknown as MockPriceOracle;
  }
}
