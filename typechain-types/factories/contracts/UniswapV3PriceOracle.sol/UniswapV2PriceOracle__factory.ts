/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  UniswapV2PriceOracle,
  UniswapV2PriceOracleInterface,
} from "../../../contracts/UniswapV3PriceOracle.sol/UniswapV2PriceOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_abdsUsdtPool",
        type: "address",
      },
      {
        internalType: "address",
        name: "_abdsUsdcPool",
        type: "address",
      },
      {
        internalType: "address",
        name: "_abdsEthpool",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "abdsEthPool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "abdsUsdcPool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "abdsUsdtPool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getABDSPriceInETH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getABDSPriceInUSDC",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getABDSPriceInUSDT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_abdsUsdtPool",
        type: "address",
      },
      {
        internalType: "address",
        name: "_abdsUsdcPool",
        type: "address",
      },
      {
        internalType: "address",
        name: "_abdsEthPool",
        type: "address",
      },
    ],
    name: "setPools",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610ca1380380610ca183398181016040528101906100329190610248565b61004e61004361011960201b60201c565b61012160201b60201c565b82600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505061029b565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610215826101ea565b9050919050565b6102258161020a565b811461023057600080fd5b50565b6000815190506102428161021c565b92915050565b600080600060608486031215610261576102606101e5565b5b600061026f86828701610233565b935050602061028086828701610233565b925050604061029186828701610233565b9150509250925092565b6109f7806102aa6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063af89038611610066578063af89038614610123578063c589f75114610141578063c84d7ca71461015f578063f2fde38b1461017d578063f8f382cd146101995761009e565b806339593eeb146100a3578063421e7646146100c1578063715018a6146100dd5780638379d77f146100e75780638da5cb5b14610105575b600080fd5b6100ab6101b7565b6040516100b8919061067d565b60405180910390f35b6100db60048036038101906100d691906106c9565b6101dd565b005b6100e56102ad565b005b6100ef6102c1565b6040516100fc9190610735565b60405180910390f35b61010d6102f3565b60405161011a919061067d565b60405180910390f35b61012b61031c565b604051610138919061067d565b60405180910390f35b610149610342565b6040516101569190610735565b60405180910390f35b610167610374565b604051610174919061067d565b60405180910390f35b61019760048036038101906101929190610750565b61039a565b005b6101a161041d565b6040516101ae9190610735565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6101e561044f565b82600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b6102b561044f565b6102bf60006104cd565b565b60006102ee600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610591565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600061036f600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610591565b905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6103a261044f565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610411576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040890610800565b60405180910390fd5b61041a816104cd565b50565b600061044a600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610591565b905090565b610457610634565b73ffffffffffffffffffffffffffffffffffffffff166104756102f3565b73ffffffffffffffffffffffffffffffffffffffff16146104cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c29061086c565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000808290506000808273ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa1580156105e5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610609919061090e565b5091509150818161061a9190610990565b6dffffffffffffffffffffffffffff169350505050919050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106678261063c565b9050919050565b6106778161065c565b82525050565b6000602082019050610692600083018461066e565b92915050565b600080fd5b6106a68161065c565b81146106b157600080fd5b50565b6000813590506106c38161069d565b92915050565b6000806000606084860312156106e2576106e1610698565b5b60006106f0868287016106b4565b9350506020610701868287016106b4565b9250506040610712868287016106b4565b9150509250925092565b6000819050919050565b61072f8161071c565b82525050565b600060208201905061074a6000830184610726565b92915050565b60006020828403121561076657610765610698565b5b6000610774848285016106b4565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006107ea60268361077d565b91506107f58261078e565b604082019050919050565b60006020820190508181036000830152610819816107dd565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061085660208361077d565b915061086182610820565b602082019050919050565b6000602082019050818103600083015261088581610849565b9050919050565b60006dffffffffffffffffffffffffffff82169050919050565b6108af8161088c565b81146108ba57600080fd5b50565b6000815190506108cc816108a6565b92915050565b600063ffffffff82169050919050565b6108eb816108d2565b81146108f657600080fd5b50565b600081519050610908816108e2565b92915050565b60008060006060848603121561092757610926610698565b5b6000610935868287016108bd565b9350506020610946868287016108bd565b9250506040610957868287016108f9565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061099b8261088c565b91506109a68361088c565b9250826109b6576109b5610961565b5b82820490509291505056fea2646970667358221220adcaf7cadfdd481aebf621bb67f92c30845fdf4c32bbf41212010ef457f9a87c64736f6c634300081b0033";

type UniswapV2PriceOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniswapV2PriceOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniswapV2PriceOracle__factory extends ContractFactory {
  constructor(...args: UniswapV2PriceOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _abdsUsdtPool: AddressLike,
    _abdsUsdcPool: AddressLike,
    _abdsEthpool: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _abdsUsdtPool,
      _abdsUsdcPool,
      _abdsEthpool,
      overrides || {}
    );
  }
  override deploy(
    _abdsUsdtPool: AddressLike,
    _abdsUsdcPool: AddressLike,
    _abdsEthpool: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _abdsUsdtPool,
      _abdsUsdcPool,
      _abdsEthpool,
      overrides || {}
    ) as Promise<
      UniswapV2PriceOracle & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): UniswapV2PriceOracle__factory {
    return super.connect(runner) as UniswapV2PriceOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapV2PriceOracleInterface {
    return new Interface(_abi) as UniswapV2PriceOracleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): UniswapV2PriceOracle {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as UniswapV2PriceOracle;
  }
}
