/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  UniswapV3PriceOracle,
  UniswapV3PriceOracleInterface,
} from "../../../contracts/UniswapV3PriceOracle.sol/UniswapV3PriceOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_abdsUsdtPool",
        type: "address",
      },
      {
        internalType: "address",
        name: "_abdsUsdcPool",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "abdsUsdcPool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "abdsUsdtPool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getABDSPriceInUSDC",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getABDSPriceInUSDT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_abdsUsdtPool",
        type: "address",
      },
      {
        internalType: "address",
        name: "_abdsUsdcPool",
        type: "address",
      },
    ],
    name: "setPools",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610e2c380380610e2c83398181016040528101906100329190610257565b61004e61004361012560201b60201c565b61012d60201b60201c565b61006867de0d141b7ef1621d60c01b6101f160201b60201c565b6100826752ab96cfab03951960c01b6101f160201b60201c565b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506100dd67383a28cb7a2c8e3260c01b6101f160201b60201c565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050610297565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b50565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610224826101f9565b9050919050565b61023481610219565b811461023f57600080fd5b50565b6000815190506102518161022b565b92915050565b6000806040838503121561026e5761026d6101f4565b5b600061027c85828601610242565b925050602061028d85828601610242565b9150509250929050565b610b86806102a66000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063a525306c1161005b578063a525306c146100f1578063af8903861461010d578063f2fde38b1461012b578063f8f382cd1461014757610088565b806339593eeb1461008d578063715018a6146100ab5780638379d77f146100b55780638da5cb5b146100d3575b600080fd5b610095610165565b6040516100a29190610731565b60405180910390f35b6100b361018b565b005b6100bd61019f565b6040516100ca9190610765565b60405180910390f35b6100db61020d565b6040516100e89190610731565b60405180910390f35b61010b600480360381019061010691906107b1565b610236565b005b610115610328565b6040516101229190610731565b60405180910390f35b610145600480360381019061014091906107f1565b61034e565b005b61014f6103d1565b60405161015c9190610765565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61019361043f565b61019d60006104bd565b565b60006101b56728713d1ea7e2b03c60c01b610581565b6101c9674c966c4abdba62e260c01b610581565b6101dd67530d66cb73e1f39e60c01b610581565b610208600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610584565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61024a676e93e017fbe1e6c460c01b610581565b61025261043f565b6102666793051ce45c435b5e60c01b610581565b61027a67e29c0f8060eb60dc60c01b610581565b61028e67a493e16223edd2b160c01b610581565b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506102e367575edf3e048a9a6d60c01b610581565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61035661043f565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036103c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bc906108a1565b60405180910390fd5b6103ce816104bd565b50565b60006103e767decb081b7a42650260c01b610581565b6103fb674952f0bcee00c13f60c01b610581565b61040f672743c06602d9ca3360c01b610581565b61043a600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610584565b905090565b6104476106e8565b73ffffffffffffffffffffffffffffffffffffffff1661046561020d565b73ffffffffffffffffffffffffffffffffffffffff16146104bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b29061090d565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b50565b600061059a679abcdcd8c731f00d60c01b610581565b6105ae678cbfa69d94a06fad60c01b610581565b6105c26737c02ad49e8307a360c01b610581565b60008290506105db67bae68143a426de8160c01b610581565b6105ef6756c0561e1504512560c01b610581565b60008173ffffffffffffffffffffffffffffffffffffffff16633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa15801561063c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106609190610a3d565b505050505050905061067c6733321451e5a1857660c01b610581565b6106906790103c31e74e845260c01b610581565b60c0670de0b6b3a76400008273ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff166106d39190610b0e565b6106dd9190610b0e565b901c92505050919050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061071b826106f0565b9050919050565b61072b81610710565b82525050565b60006020820190506107466000830184610722565b92915050565b6000819050919050565b61075f8161074c565b82525050565b600060208201905061077a6000830184610756565b92915050565b600080fd5b61078e81610710565b811461079957600080fd5b50565b6000813590506107ab81610785565b92915050565b600080604083850312156107c8576107c7610780565b5b60006107d68582860161079c565b92505060206107e78582860161079c565b9150509250929050565b60006020828403121561080757610806610780565b5b60006108158482850161079c565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061088b60268361081e565b91506108968261082f565b604082019050919050565b600060208201905081810360008301526108ba8161087e565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006108f760208361081e565b9150610902826108c1565b602082019050919050565b60006020820190508181036000830152610926816108ea565b9050919050565b610936816106f0565b811461094157600080fd5b50565b6000815190506109538161092d565b92915050565b60008160020b9050919050565b61096f81610959565b811461097a57600080fd5b50565b60008151905061098c81610966565b92915050565b600061ffff82169050919050565b6109a981610992565b81146109b457600080fd5b50565b6000815190506109c6816109a0565b92915050565b600060ff82169050919050565b6109e2816109cc565b81146109ed57600080fd5b50565b6000815190506109ff816109d9565b92915050565b60008115159050919050565b610a1a81610a05565b8114610a2557600080fd5b50565b600081519050610a3781610a11565b92915050565b600080600080600080600060e0888a031215610a5c57610a5b610780565b5b6000610a6a8a828b01610944565b9750506020610a7b8a828b0161097d565b9650506040610a8c8a828b016109b7565b9550506060610a9d8a828b016109b7565b9450506080610aae8a828b016109b7565b93505060a0610abf8a828b016109f0565b92505060c0610ad08a828b01610a28565b91505092959891949750929550565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b198261074c565b9150610b248361074c565b9250828202610b328161074c565b91508282048414831517610b4957610b48610adf565b5b509291505056fea2646970667358221220e591f4bd11705cf860433df0841ba963732976d1009b00bbbba85af5e22fdb4f64736f6c634300081b0033";

type UniswapV3PriceOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniswapV3PriceOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniswapV3PriceOracle__factory extends ContractFactory {
  constructor(...args: UniswapV3PriceOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _abdsUsdtPool: AddressLike,
    _abdsUsdcPool: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _abdsUsdtPool,
      _abdsUsdcPool,
      overrides || {}
    );
  }
  override deploy(
    _abdsUsdtPool: AddressLike,
    _abdsUsdcPool: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _abdsUsdtPool,
      _abdsUsdcPool,
      overrides || {}
    ) as Promise<
      UniswapV3PriceOracle & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): UniswapV3PriceOracle__factory {
    return super.connect(runner) as UniswapV3PriceOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapV3PriceOracleInterface {
    return new Interface(_abi) as UniswapV3PriceOracleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): UniswapV3PriceOracle {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as UniswapV3PriceOracle;
  }
}
